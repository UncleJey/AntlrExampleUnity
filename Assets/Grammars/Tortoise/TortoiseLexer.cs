//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Tortoise.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class TortoiseLexer : Lexer {
	public const int
		MOV=1, ROT=2, DIR=3, VAL=4, INT=5, NEWLINE=6, WS=7;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"MOV", "ROT", "DIR", "VAL", "INT", "NEWLINE", "WS"
	};


		public TortoiseCompiler Compiler = new TortoiseCompiler();


	public TortoiseLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'mov'", "'rot'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "MOV", "ROT", "DIR", "VAL", "INT", "NEWLINE", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Tortoise.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\t\x37\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x3"+
		"\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x5\x4 \n\x4\x3\x5\x3\x5\x3\x6\x5\x6%\n\x6\x3\x6\x6\x6(\n"+
		"\x6\r\x6\xE\x6)\x3\a\x5\a-\n\a\x3\a\x3\a\x3\b\x6\b\x32\n\b\r\b\xE\b\x33"+
		"\x3\b\x3\b\x2\x2\t\x3\x3\x5\x4\a\x5\t\x6\v\a\r\b\xF\t\x3\x2\x3\x5\x2\v"+
		"\f\xF\xF\"\";\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2"+
		"\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x3"+
		"\x11\x3\x2\x2\x2\x5\x15\x3\x2\x2\x2\a\x1F\x3\x2\x2\x2\t!\x3\x2\x2\x2\v"+
		"$\x3\x2\x2\x2\r,\x3\x2\x2\x2\xF\x31\x3\x2\x2\x2\x11\x12\ao\x2\x2\x12\x13"+
		"\aq\x2\x2\x13\x14\ax\x2\x2\x14\x4\x3\x2\x2\x2\x15\x16\at\x2\x2\x16\x17"+
		"\aq\x2\x2\x17\x18\av\x2\x2\x18\x6\x3\x2\x2\x2\x19\x1A\ah\x2\x2\x1A\x1B"+
		"\ay\x2\x2\x1B \a\x66\x2\x2\x1C\x1D\a\x64\x2\x2\x1D\x1E\ay\x2\x2\x1E \a"+
		"\x66\x2\x2\x1F\x19\x3\x2\x2\x2\x1F\x1C\x3\x2\x2\x2 \b\x3\x2\x2\x2!\"\x5"+
		"\v\x6\x2\"\n\x3\x2\x2\x2#%\a/\x2\x2$#\x3\x2\x2\x2$%\x3\x2\x2\x2%\'\x3"+
		"\x2\x2\x2&(\x4\x32;\x2\'&\x3\x2\x2\x2()\x3\x2\x2\x2)\'\x3\x2\x2\x2)*\x3"+
		"\x2\x2\x2*\f\x3\x2\x2\x2+-\a\xF\x2\x2,+\x3\x2\x2\x2,-\x3\x2\x2\x2-.\x3"+
		"\x2\x2\x2./\a\f\x2\x2/\xE\x3\x2\x2\x2\x30\x32\t\x2\x2\x2\x31\x30\x3\x2"+
		"\x2\x2\x32\x33\x3\x2\x2\x2\x33\x31\x3\x2\x2\x2\x33\x34\x3\x2\x2\x2\x34"+
		"\x35\x3\x2\x2\x2\x35\x36\b\b\x2\x2\x36\x10\x3\x2\x2\x2\b\x2\x1F$),\x33"+
		"\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
